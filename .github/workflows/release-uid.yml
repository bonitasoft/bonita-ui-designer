name: Release UID

on:
  workflow_dispatch:
    inputs:
      version:
        description: new version to release (keep --next-path to bump version)
        default: --next-patch
        required: true
      publishBinaries:
        description: true to Publish binaries
        required: true
        default: true

jobs:
  createGithubRelease:
    name: Create release
    runs-on: ubuntu-20.04
    steps:
      - name: Setup checkout
        uses: actions/checkout@v2
      - name: Get tag version
        id: newTagVersion
        shell: bash
        run: |
          if [ ${{ github.event.inputs.version }} = '--next-patch' ]
          then
              echo "##[set-output name=value;]$(echo $(./infrastructure/next-patch-version.sh))"
          else
              echo "##[set-output name=value;]$(echo ${{ github.event.inputs.version }})"
          fi

      - name: Config git
        run: |
          git config --local user.email "ui-designer-bot@users.noreply.github.com"
          git config --local user.name "ui-designer-bot"
          git config pull.rebase true

      - name: Update Version
        shell: bash
        run: |
          ./infrastructure/update-version.sh ${{ steps.newTagVersion.outputs.value }}
          git commit -a -m "other(${{ steps.newTagVersion.outputs.value }}) prepare release ${{ steps.newTagVersion.outputs.value }}" && git tag -a ${{ steps.newTagVersion.outputs.value}} -m "Release ${{ steps.newTagVersion.outputs.value }}"
          git push --tags

      - name: changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}

      - name: Create Release
        uses: actions/create-release@latest
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.newTagVersion.outputs.value }}
          release_name: Release ${{ steps.newTagVersion.outputs.value }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: true

      - name: Publish artefact
        if: ${{ success() && github.event.inputs.publishBinaries == 'true'}}
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GH_PERSONNAL_ACCES_TOKEN }}
          event-type: github-publish
          client-payload: '{"studioBaseBranch":"${{ github.ref }}", "releaseVersion": "${{ steps.newTagVersion.outputs.value }}"}'
